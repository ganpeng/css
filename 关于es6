1: let关键字
****  let用于声明变量，所声明的变量只在let所在的代码块中有效；
****  let不存在变量的提升，如果在变量声明之前使用则报错ReferenceError
****  块级作用域中使用let声明的变量会绑定这个区域，该变量不会在受到外部的影响(TDZ暂时性死区)
****  let不允许在相同作用域中，重复声明同一个变量
****  es6允许块级作用域的任意嵌套，外层作用域无法读取内层作用域中的变量
****  es6块级作用域的出现使得广泛使用的IIFE变得不再必要了
****  es6规定，函数本省的作用域在其所在的块级作用域中

2: const关键字
****  const用于声明常量，一旦声明，常量的值将不再改变
****  const一旦声明常量，就必须立即初始化，不能留到以后再赋值
****  const和let的作用域相同，只在声明所在的块级作用域中有效
****  const声明的变量也不存在变量的提升，只有在声明了之后才能使用
****  const 声明的常量与let声明的变量一样，也不能重复声明
****  对于复合型的变量，变量名不指向数据，而是指向数据所在的地址，const只是保证指向的地址不变，
      并不保证该地址的数据不变，所以将一个对象声明为常量要非常小心

